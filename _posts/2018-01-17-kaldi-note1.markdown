---
layout:     post
title:      "Kaldi thchs30手札（一）" 
subtitle:   "特征提取阶段（line 0-33)"
date:       2018-01-17 22:15:18
author:     "Pelhans"
header-img: "img/post_kaldi_note.jpg"
header-mask: 0.3 
catalog:    true
tags:
    - Kaldi
---


> Kaldi是一个语音识别工具包，基于C++并遵循Apache v2.0协议。它包含语音信号处理、声学模型训练、解码等一系列工具，同时内部还带有各种语言的源代码实例。非常强大。

* TOC
{:toc}

#  thchs30 的运行

程序到手，当然是先跑起来看看长什么样子，功能是什么。所以本部分先介绍Kaldi的运行。

1） 从github上Clone 仓库： git clone https://github.com/kaldi-asr/kaldi

2) 进入Kaldi目录后查看INSTALL文件，它会告诉你怎么安装Kaldi，需要注意的是 extras/check_dependencies.sh这里检查依赖，一定要确保满足相关要求，否则后面会很麻烦。编译的话根据自己的CPU数目选择make -j **n**。

3） 下载语音预料，thchs30的语料是公开的，可以在http://www.openslr.org/18/ 里下载并解压。

4） Kaldi安装好后就可以进入到egs/thchs30/s5/目录了。首先加入你是本地运行的话，需要讲cmd.sh文件内的queue.pl替换为run.pl。然后再修改第11行的thchs= 的路径为你自己存放语音语料的路径，到此Kaldi程序就可以运行了。后面DNN那里可能会出一点问题，这个后面再说。

# 生成text wav.scp utt2pk spk2utt

负责此处的是run.sh中的第22行，即:
<code class="hljs livecodeserver">{% highlight ruby %}
local/thchs-30_data_prep.sh $H $thchs/data_thchs30 || exit 1;
{% endhighlight %}

其中$H 是当前目录名，$thchs指的是语音语料库位置。这俩是thchs-30_data_prep.sh 脚本的参数。（这个local我一开始以为是bash里面的local命令，想了半天也没有想懂，后来才发现这货就一文件夹。。。)

该程序的答题执行流程是读取语料库中的{train, dev, test}文件夹下的.wav文件和.trn文件。利用wav文件的名字和所在路径生成wav.scp文件，利用wav.trn文件中的第1行和第3行生成word.txt 和phone.txt。这里的word和phone都是直接从文件中读取的。同时由于此处没有说话人识别，因此对于utt2spk(语段到说话人)和spk2utt(说话人到语段)里的内容都是两列相同的wav文件名。

# 提取MFCC特征

关于梅尔倒谱系数(MFCC)我们之前讲过,在Kaldi里它本身设置了合理的默认值,同事保留了一部分用户最有可能想调整的选项,如梅尔滤波器的个数,最大和最小截止频率等等.它通常需要读取wav文件或.pcm文件,假如数据源不是wav文件,我们就得使用工具来转化,Kaldi中有的sph2pipe工具能满足一般的情况.

命令工具 compute-mfcc-feats用来计算MFCC特征,若直接运行不带参数的话就会给出一个参数列表.改程序需要两个参数,rspecifier是用来度.wav数据, wspecifier是用来写特征的(就是r 和w啦).典型的用法是,将数据写入一个大的"archive"文件,也写到一个"scp"文件以便随机读取.

MFCC的计算由Mfcc类型的对象完成,它有Compute()函数可以根据波形计算特征.一个完整的MFCC计算如下:

1) 计算出一个文件中帧的数目(通常帧长25ms,帧移10ms)

2) 对每一帧提取数据,可选做Dithering,预加重和去除直流偏移,还可以和加窗函数想成(此处支持多种选项,如Hanmming 窗).

3)计算该点能量(假如用对数能量则没有$$C_{0}$$).

4) 做快速傅里叶变换(FFT)并计算功率谱.

5)计算每个梅尔滤波器的能量,如23个部分重叠的三角滤波器,其中心在梅尔频域等间距.

6) 计算对数能量病作宇轩变换,根据要求保留系数(如13个).

7) 选做倒谱变;它仅仅是比例变换,确保系数在合理范围内.

上下截止频率根据三角滤波器界定，由选项–low-freq和–high-freq控制，通常分别设置为0Hz和奈奎斯特频率附近，如对16kHz采样的语音设置为–low-freq=20 和 –high-freq=7800。

Kaldi的特征和HTK的特征在很多方面不同，但是几乎所有这些不同归结于有不同的默认值。用选项–htk-compat=true并正确设置参数，能得到同HTK非常接近的特征。一个可能重要的选项是我们不支持能量最大归一化。这是因为Kaldi希望能把无状态方式应用到归一化方法，且希望从原理上计算一帧帧特征仍能给出相同结果。但是程序compute-mfcc-feats里有–subtract-mean选项来提取特征的均值。对每个语音做此操作；每个说话人可以有不同的方式来提取特征均值。（如compute_cmvn_stats.sh，表示倒谱均值和方差归一化）。

# 倒谱均值方差归一化(CMVN)

在实际情况下,受不同麦克风及音频通道的影响,会导致相同音素的特征差别比较大，通过CMVN可以得到均值为0，方差为1的标准特征。均值方差可以以一段语音为单位计算，但更好的是在一个较大的数据及上进行计算，这样识别效果会更加robustness。Kaldi中计算均值和方差的代码在compute-cmvn-stats.cc， 归一化在apply-cmvn.cc。

# 滤波器组(FilterBank, FBank)

人耳对声音频谱的响应是非线性的，经验表明：如果我们能够设计一种前端处理算法，以类似于人耳的方式对音频进行处理，可以提高语音识别的性能。FilterBank分析就是这样的一种算法。FBank特征提取要在预处理之后进行，这时语音已经分帧，我们需要逐帧提取FBank特征。


